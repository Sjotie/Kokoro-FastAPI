# -----------------------------------------------------
# Dockerfile.railway
# -----------------------------------------------------
FROM python:3.10-slim

# 1. Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    espeak-ng \
    git \
    libsndfile1 \
    curl \
    ffmpeg \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 2. Copy uv from prebuilt image
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# 3. Create a non-root user
RUN useradd -m -u 1000 appuser

# 4. Create directories & fix permissions
RUN mkdir -p /app/models && \
    mkdir -p /app/api/src/voices && \
    chown -R appuser:appuser /app

USER appuser

# 5. Download and extract the Kokoro-82M model
WORKDIR /app/models
RUN set -x && \
    curl -L -o model.tar.gz https://github.com/remsky/Kokoro-FastAPI/releases/download/v0.0.1/kokoro-82m-onnx.tar.gz && \
    echo "Downloaded model.tar.gz:" && ls -lh model.tar.gz && \
    tar xzf model.tar.gz && \
    echo "Contents after extraction:" && ls -lhR && \
    rm model.tar.gz && \
    echo "Final contents:" && ls -lhR

# 6. Download and extract voice models
WORKDIR /app/api/src/voices
RUN curl -L -o voices.tar.gz https://github.com/remsky/Kokoro-FastAPI/releases/download/v0.0.1/voice-models.tar.gz && \
    tar xzf voices.tar.gz && \
    rm voices.tar.gz

# 7. Switch back to /app
WORKDIR /app

# 8. Copy dependency files
COPY --chown=appuser:appuser pyproject.toml ./pyproject.toml

# 9. Install dependencies with uv (no BuildKit mount)
RUN uv venv && \
    uv sync --extra cpu --no-install-project

# 10. Copy project files
COPY --chown=appuser:appuser api ./api

# 11. Install project (again, no mount)
RUN uv sync --extra cpu

# 12. Environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app:/app/models
ENV PATH="/app/.venv/bin:$PATH"
ENV UV_LINK_MODE=copy

# 13. Run FastAPI
CMD ["uv", "run", "python", "-m", "uvicorn", "api.src.main:app", "--host", "0.0.0.0", "--port", "8880", "--log-level", "debug"]
